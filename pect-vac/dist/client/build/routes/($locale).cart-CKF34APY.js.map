{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).cart.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/($locale).cart.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/($locale).cart.jsx\");\n  import.meta.hot.lastModified = \"1692931299829.9521\";\n}\n// REMIX HMR END\n\nimport { Await, useMatches } from '@remix-run/react';\nimport { Suspense } from 'react';\nimport { CartForm } from '@shopify/hydrogen';\nimport { json } from '@shopify/remix-oxygen';\nimport { CartMain } from '~/components/Cart';\nexport const meta = () => {\n  return [{\n    title: `Hydrogen | Cart`\n  }];\n};\nexport async function action({\n  request,\n  context\n}) {\n  const {\n    session,\n    cart\n  } = context;\n  const [formData, customerAccessToken] = await Promise.all([request.formData(), session.get('customerAccessToken')]);\n  const {\n    action,\n    inputs\n  } = CartForm.getFormInput(formData);\n  if (!action) {\n    throw new Error('No action provided');\n  }\n  let status = 200;\n  let result;\n  switch (action) {\n    case CartForm.ACTIONS.LinesAdd:\n      result = await cart.addLines(inputs.lines);\n      break;\n    case CartForm.ACTIONS.LinesUpdate:\n      result = await cart.updateLines(inputs.lines);\n      break;\n    case CartForm.ACTIONS.LinesRemove:\n      result = await cart.removeLines(inputs.lineIds);\n      break;\n    case CartForm.ACTIONS.DiscountCodesUpdate:\n      {\n        const formDiscountCode = inputs.discountCode;\n\n        // User inputted discount code\n        const discountCodes = formDiscountCode ? [formDiscountCode] : [];\n\n        // Combine discount codes already applied on cart\n        discountCodes.push(...inputs.discountCodes);\n        result = await cart.updateDiscountCodes(discountCodes);\n        break;\n      }\n    case CartForm.ACTIONS.BuyerIdentityUpdate:\n      {\n        result = await cart.updateBuyerIdentity({\n          ...inputs.buyerIdentity,\n          customerAccessToken\n        });\n        break;\n      }\n    default:\n      throw new Error(`${action} cart action is not defined`);\n  }\n  const cartId = result.cart.id;\n  const headers = cart.setCartId(result.cart.id);\n  const {\n    cart: cartResult,\n    errors\n  } = result;\n  const redirectTo = formData.get('redirectTo') ?? null;\n  if (typeof redirectTo === 'string') {\n    status = 303;\n    headers.set('Location', redirectTo);\n  }\n  return json({\n    cart: cartResult,\n    errors,\n    analytics: {\n      cartId\n    }\n  }, {\n    status,\n    headers\n  });\n}\nexport default function Cart() {\n  _s();\n  const [root] = useMatches();\n  const cart = root.data?.cart;\n  return <div className=\"cart\">\n      <h1>Cart</h1>\n      <Suspense fallback={<p>Loading cart ...</p>}>\n        <Await errorElement={<div>An error occurred</div>} resolve={cart}>\n          {cart => {\n          return <CartMain layout=\"page\" cart={cart} />;\n        }}\n        </Await>\n      </Suspense>\n    </div>;\n}\n_s(Cart, \"qWoibZqbzlhGDRlxEMM9P1NS8i8=\", false, function () {\n  return [useMatches];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAyB;AAuFnB;AA5GN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAQO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AA0Ee,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM,CAAC,IAAI,IAAI,WAAW;AAC1B,QAAM,OAAO,KAAK,MAAM;AACxB,SAAO,mDAAC,SAAI,WAAU,QAClB;AAAA,uDAAC,QAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,IACR,mDAAC,0BAAS,UAAU,mDAAC,OAAE,gCAAH;AAAA;AAAA;AAAA;AAAA,WAAmB,GACrC,6DAAC,SAAM,cAAc,mDAAC,SAAI,iCAAL;AAAA;AAAA;AAAA;AAAA,WAAsB,GAAQ,SAAS,MACzD,WAAAC,UAAQ;AACT,aAAO,mDAAC,YAAS,QAAO,QAAO,MAAMA,SAA9B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,IAC7C,KAHA;AAAA;AAAA;AAAA;AAAA,WAIA,KALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OARG;AAAA;AAAA;AAAA;AAAA,SASL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,UAAU;AACpB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "cart"]
}
